{"meta":{"title":"一点果酱","subtitle":"资源和实用分享","description":"学习资料，实用软件，生活技巧分享","author":"小果酱","url":"https://jam.mounui.com","root":"/"},"pages":[{"title":"所有标签","date":"un11fin11","updated":"un11fin11","comments":true,"path":"tags/index.html","permalink":"https://jam.mounui.com/tags/index.html","excerpt":"","text":""},{"title":"所有分类","date":"un11fin11","updated":"un11fin11","comments":true,"path":"categories/index.html","permalink":"https://jam.mounui.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"Typora + PicGo + 七牛云配置图床","slug":"Typora + PicGo + 七牛云配置图床","date":"un00fin00","updated":"un11fin11","comments":true,"path":"2024/01/07/Typora + PicGo + 七牛云配置图床/","permalink":"https://jam.mounui.com/2024/01/07/Typora%20+%20PicGo%20+%20%E4%B8%83%E7%89%9B%E4%BA%91%E9%85%8D%E7%BD%AE%E5%9B%BE%E5%BA%8A/","excerpt":"","text":"摘要：在文档编写、博客撰写过程中，图片的上传与管理一直是令人头痛的问题。为解决这个问题，本教程将详细介绍如何利用 Typora 编辑器、PicGo 工具以及七牛云服务来配置个人图床，并提升写作效率。 前置条件在配置过程开始之前，我们首先需要准备以下几样东西： 创建七牛云账户并开设一个存储空间(Bucket) 安装 Typora 编辑器 安装 PicGo 工具 配置教程第一步：设置七牛图床 登陆到你的七牛云账户中，进入控制台界面，点击密钥管理，在这里你可以看到 AK(Access Key) 和 SK(Secret Key)，点击显示并保存这两个密钥。 启动 PicGo，进入设置界面，选择图床设置后，选择七牛图床。在这里，填入你保存的 AK 、 SK 、存储空间名、存储区域以及测试域名。 点击 设为默认图床 按钮，然后点击确定完成设置。 注意：测试域名可以在七牛云的存储管理界面中找到。 第二步：配置 Typora 启动 Typora 编辑器，选择 文件 - 偏好设置 菜单，然后选择图像选项卡。 在上传服务设定下拉框中，选择 PicGo，然后在命令行路径文本框里填入你的 PicGo.exe 的路径。 点击 测试插图上传 按钮，如果配置无误，应能看到上传成功的提示消息。 至此，我们已经将 Typora 与 PicGo 工具、七牛云服务成功绑定，打造个性化图床配置。 后面每次当你需要向文章中添加图片时，只要通过 Typora 的插图功能添加即可，图片会自动上传到七牛云图床，并返回一个在线链接插入到你的文章中，大大提升写作效率。 总结：通过 Typora + PicGo + 七牛云 的组合，我们解决了在写作中频繁上传图片、管理图片链接等问题，实现了自动上传与链接生成，提升了写作效率。希望这个教程对你有所帮助，如果在配置过程中遇到问题，欢迎留言讨论。","categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://jam.mounui.com/categories/Hexo/"}],"tags":[{"name":"Typora","slug":"Typora","permalink":"https://jam.mounui.com/tags/Typora/"},{"name":"PicGo","slug":"PicGo","permalink":"https://jam.mounui.com/tags/PicGo/"},{"name":"七牛云","slug":"七牛云","permalink":"https://jam.mounui.com/tags/%E4%B8%83%E7%89%9B%E4%BA%91/"},{"name":"图床","slug":"图床","permalink":"https://jam.mounui.com/tags/%E5%9B%BE%E5%BA%8A/"}]},{"title":"Hexo博客的跨平台同步策略","slug":"Hexo博客的跨平台同步策略","date":"un55fin55","updated":"un11fin11","comments":true,"path":"2024/01/05/Hexo博客的跨平台同步策略/","permalink":"https://jam.mounui.com/2024/01/05/Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%B7%A8%E5%B9%B3%E5%8F%B0%E5%90%8C%E6%AD%A5%E7%AD%96%E7%95%A5/","excerpt":"","text":"Hexo是一款基于Node.js的快速、简洁且高效的博客框架，其能帮助我们迅速搭建个性化的博客。不过，如果我们需要在多个设备上使用Hexo进行博客的编写和维护，如何实现跨平台同步就成为一个问题。以下是关于Hexo博客的跨平台同步的一种解决方案。 方案概述:主要的思路是利用版本控制系统Git，通过在Github上创建分支，可以使我们的Hexo博客实现多设备同步。 具体流程包括： 在Github仓库上创建一个新分支（比如命名为Hexo）用于存放Hexo的源文件。 将Hexo源文件push到新建的分支。 在其他设备上，clone这个仓库，并切换到Hexo分支。 在新设备上运行命令 npm install 安装必要的模块。 这样，你就可以在新设备上编写博客并push到Github，实现了博客文章的多设备同步。 详细步骤：1. 创建Github分支在你的Github博客仓库主页，点击Branch: master标签，输入新分支名（如Hexo），然后点击Create branch: Hexo按钮。 2. 上传Hexo源文件首先确保.gitignore文件中包含如下内容，避免将不必要的文件上传到Github。 12345678.DS_StoreThumbs.dbdb.json*.lognode_modules/public/.deploy*/_multiconfig.yml 然后，你需要先删除部署到主分支的public文件夹，然后init一个新的git库，并将所有文件push到新建的Hexo分支（假设你的仓库名为username&#x2F;username.github.io）。 123456$ rm -rf .git$ git init$ git add .$ git commit -m &quot;first commit&quot;$ git remote add origin https://github.com/username/username.github.io.git$ git push origin hexo 3. 新设备上克隆仓库在新设备上，首先你需要克隆Github的博客仓库，并切换到Hexo分支。 123$ git clone https://github.com/username/username.github.io.git$ cd username.github.io$ git checkout hexo 4. 安装必要模块在新设备上执行以下的命令，用以安装必要的模块。 12$ npm install$ npm install hexo-deployer-git 现在你已经可以在新设备上运行Hexo命令，完成博客文章的编写与更新了。 总结：以上就是基于Git和GitHub，实现Hexo博客的多设备同步的一种方案。这样，无论你在何处，只要有网络设备，都能对你的博客进行更新与维护，极大的便利了博客的操作。","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://jam.mounui.com/tags/hexo/"},{"name":"博客","slug":"博客","permalink":"https://jam.mounui.com/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"同步","slug":"同步","permalink":"https://jam.mounui.com/tags/%E5%90%8C%E6%AD%A5/"}]},{"title":"如何创建多个github Pages项目并指定域名","slug":"如何创建多个github Pages项目并指定域名","date":"un55fin55","updated":"un55fin55","comments":true,"path":"2024/01/05/如何创建多个github Pages项目并指定域名/","permalink":"https://jam.mounui.com/2024/01/05/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E5%A4%9A%E4%B8%AAgithub%20Pages%E9%A1%B9%E7%9B%AE%E5%B9%B6%E6%8C%87%E5%AE%9A%E5%9F%9F%E5%90%8D/","excerpt":"","text":"在这篇文章中，我将讲述如何为你的多个GitHub项目生成GitHub Pages，并指定一个域名。这将是一个简单的步骤，只需要一点点GitHub知识就可以完成。 GitHub Pages提供了两种类型的网页：用户页和项目页。 用户页是基于你的用户名的，一般格式为username.github.io，在这种情况下，我的GitHub Pages用户页就是tdoly.github.io。这种格式的页面存储在仓库的主分支上。 项目页，它们是基于你的项目的，格式通常为username.github.io/repository。这种类型的页面存储在该仓库的gh-pages分支或者主分支上。 步骤一：为你的项目创建GitHub Pages在你的GitHub仓库中， 选择Settings选项 滚动到GitHub Pages区域 选择你的页面来源分支，一般是主分支或者gh-pages分支。 步骤二：为你的项目指定一个域名可以在你的仓库中创建一个CNAME文件，文件中需要包含你希望绑定的域名。 注意：尽管你可以为同一个用户下的多个项目设置 GitHub Pages，但你只能向一个用户页绑定一个域名。如果你试图为其他项目页绑定域名，那你的用户页的域名可能会失效。 总的来说，为你的多个GitHub项目生成GitHub Pages并指定域名是一个强大的功能，它允许你轻松快速地部署并公开你的项目。你可以使用这个功能来展示你的项目，或者作为一个个人或项目博客使用。","categories":[],"tags":[{"name":"博客","slug":"博客","permalink":"https://jam.mounui.com/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"github","slug":"github","permalink":"https://jam.mounui.com/tags/github/"},{"name":"github pages","slug":"github-pages","permalink":"https://jam.mounui.com/tags/github-pages/"}]},{"title":"Hexo在Github托管的博客绑定个人域名","slug":"Hexo在Github托管的博客绑定个人域名","date":"un55fin55","updated":"un11fin11","comments":true,"path":"2024/01/05/Hexo在Github托管的博客绑定个人域名/","permalink":"https://jam.mounui.com/2024/01/05/Hexo%E5%9C%A8Github%E6%89%98%E7%AE%A1%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%BB%91%E5%AE%9A%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D/","excerpt":"","text":"拥有独特的域名可以帮助你建立和提升你的在线身份和个人品牌。它作为你网络存在的一部分，使你的网站看上去更加专业。 一、购买与配置个人域名这个部分需要基于你选择的域名供应商有所不同。完成购买你喜欢的域名之后，你需要为你的GitHub Pages设置一个自定义域名。大部分供应商提供DNS设置，在该设置页，你需要添加几条记录作为下一步的准备。 旁注：通常，域名服务供应商在其文档或帮助中心提供具体的DNS管理指南。 二、添加CNAME文件在你的Hexo站点源码的source目录下新建一个名为CNAME的文件，并在该文件中填写你购买的域名。格式如下： 1your-domain.com 保存并关闭文件。 三、更改DNS设置接下来你需要根据你的选择进行域名解析的配置，通常你需要更改DNS设置来指向你的GitHub Page。 一般来说，你需要进行以下操作： 必须为每个GitHub Pages的IP地址添加A记录。目前GitHub Pages的IP地址如下： 185.199.108.153 185.199.109.153 185.199.110.153 185.199.111.153 若你希望通过www.your-domain.com访问你的网站，你还需要添加一个CNAME记录，该名称为”www”，并将”目标”，”地址”或”值”指定为your-username.github.io。 四、填写自定义域名在你的GitHub仓库设置页面找到”GitHub Pages”区域，在”Custom domain”中填写你购买的域名，例如 your-domain.com。 点击”Save”按钮保存设置。 五、强制https在GitHub页面中，选中”Enforce HTTPS”选项，这会保护你的博客连接的安全。 经过上述设置后，你就完成了个人域名的绑定，通常需要几个小时到24小时以完成DNS传播。传播完成后，你的博客就可以通过你的自定义域名进行访问了。","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://jam.mounui.com/tags/hexo/"},{"name":"博客","slug":"博客","permalink":"https://jam.mounui.com/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"github","slug":"github","permalink":"https://jam.mounui.com/tags/github/"},{"name":"域名","slug":"域名","permalink":"https://jam.mounui.com/tags/%E5%9F%9F%E5%90%8D/"}]},{"title":"使用Hexo+Github搭建个人博客","slug":"使用Hexo+Github搭建个人博客","date":"un55fin55","updated":"un11fin11","comments":true,"path":"2024/01/05/使用Hexo+Github搭建个人博客/","permalink":"https://jam.mounui.com/2024/01/05/%E4%BD%BF%E7%94%A8Hexo+Github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"个人网站可以方便地展示你的思想、成果，甚至更好地进行个人品牌设计。Hexo和GitHub是搭建个人网站非常优秀的技术组合。现在让我们开始详细的搭建教程： 准备工作首先，在你的电脑上需要安装以下环境： Node.js：Hexo是基于Node.js开发的。 Git：版本管理工具，也是我们部署到Github的必备工具。 你可以通过访问官方网站下载安装包，也可以通过命令行工具来进行安装。按照官方教程步骤安装好后，可以在命令行使用node -v和git --version命令检查是否安装成功。 安装Hexo通过npm（Node.js的包管理器）全局安装Hexo。打开终端，运行以下命令： 1$ npm install -g hexo-cli 如果出现权限错误，请确保你有管理员权限，或者使用sudo命令。 创建并初始化网站选择一个目录作为你的博客文件要存放的地方，然后在终端执行下面的命令，myblog是你博客的文件夹名，你可以自由地更换： 12$ hexo init myblog$ cd myblog 以上命令执行后，Hexo将会在myblog文件夹中创建必要的文件，并自动进行初始化。 安装依赖在你的博客文件夹下，执行下面的命令来安装必要的依赖包： 1$ npm install 生成静态网页在你的博客文件夹下，通过执行下面的命令，Hexo将会在public文件夹中生成博客的静态网页，这些都是用来部署到Github的： 1$ hexo generate 创建Github Pages仓库在Github上创建新的仓库，注意仓库名的格式应为yourusername.github.io。然后在仓库的Settings页面，找到GitHub Pages选项，更改Source为main branch。 配置Hexo部署选项回到你的博客根目录下，找到并打开文件_config.yml，找到deploy选项，并按以下格式更改： 1234deploy: type: git repository: git@github.com:yourname/yourname.github.io.git branch: main 部署到Github在终端，执行如下命令来进行部署： 12$ npm install hexo-deployer-git$ hexo deploy 根据网络情况，等待一段时间，你的博客就会自动部署到github的pages服务上。 查看你的博客最后，只需在浏览器中键入 yourname.github.io，你就能看到你自己的博客啦！ 这只是基础的博客搭建，以后你还可以根据自己的需求来个性化你的博客，比如更换主题，添加评论系统等。尽情享受你的博客旅程吧！","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://jam.mounui.com/tags/hexo/"},{"name":"博客","slug":"博客","permalink":"https://jam.mounui.com/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"github","slug":"github","permalink":"https://jam.mounui.com/tags/github/"}]}],"categories":[{"name":"Hexo","slug":"Hexo","permalink":"https://jam.mounui.com/categories/Hexo/"}],"tags":[{"name":"Typora","slug":"Typora","permalink":"https://jam.mounui.com/tags/Typora/"},{"name":"PicGo","slug":"PicGo","permalink":"https://jam.mounui.com/tags/PicGo/"},{"name":"七牛云","slug":"七牛云","permalink":"https://jam.mounui.com/tags/%E4%B8%83%E7%89%9B%E4%BA%91/"},{"name":"图床","slug":"图床","permalink":"https://jam.mounui.com/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"hexo","slug":"hexo","permalink":"https://jam.mounui.com/tags/hexo/"},{"name":"博客","slug":"博客","permalink":"https://jam.mounui.com/tags/%E5%8D%9A%E5%AE%A2/"},{"name":"同步","slug":"同步","permalink":"https://jam.mounui.com/tags/%E5%90%8C%E6%AD%A5/"},{"name":"github","slug":"github","permalink":"https://jam.mounui.com/tags/github/"},{"name":"github pages","slug":"github-pages","permalink":"https://jam.mounui.com/tags/github-pages/"},{"name":"域名","slug":"域名","permalink":"https://jam.mounui.com/tags/%E5%9F%9F%E5%90%8D/"}]}